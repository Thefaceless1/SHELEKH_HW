/*
#### Task 4 üë®‚Äçüè´
–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤–≤–æ–¥–∏—Ç 2 —á–∏—Å–ª–∞ (—á–∏—Å–ª–∞ –º–æ–≥—É—Ç –±—ã—Ç—å —Ü–µ–ª—ã–µ –∏ –¥—Ä–æ–±–Ω—ã–µ, –¥—Ä–æ–±–Ω—ã–µ –º–æ–≥—É—Ç —á–µ—Ä–µ–∑ —Ç–æ—á–∫—É –∏–ª–∏ –∑–∞–ø—è—Ç—É—é) —á–µ—Ä–µ–∑ –ø—Ä–æ–±–µ–ª –∏ –µ—â–µ —á–µ—Ä–µ–∑ –ø—Ä–æ–±–µ–ª –∑–Ω–∞–∫ +-*!/%.
–í—ã–≤–µ—Å—Ç–∏ —Ä–µ–∑—É–ª—å—Ç–∞—Ç –¥–µ–π—Å—Ç–≤–∏—è –∏–ª–∏ –∑–∞–ø—Ä–æ—Å–∏—Ç—å –µ—â–µ —Ä–∞–∑, –µ—Å–ª–∏ —á—Ç–æ-—Ç–æ –≤–≤–µ–¥–µ–Ω–æ –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ (1 —á–∏—Å–ª–æ –≤–º–µ—Å—Ç–æ 2, —Å—Ä–µ–¥–∏ —á–∏—Å–ª–∞ –Ω–µ–ø–æ–Ω—è—Ç–Ω—ã–µ —Å–∏–º–≤–æ–ª—ã, –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –∑–Ω–∞–∫)*/
const readline5 = require("readline-sync");
function task4Func () {
    const enteredData =  readline5.question("–í–≤–µ–¥–∏—Ç–µ 2 —á–∏—Å–ª–∞ —á–µ—Ä–µ–∑ –ø—Ä–æ–±–µ–ª –∏ –µ—â–µ —á–µ—Ä–µ–∑ –ø—Ä–æ–±–µ–ª –∑–Ω–∞–∫ +-*!/%:\n");
    const enteredDataAsArray = enteredData.split(" ");
    const firstNumber = +enteredDataAsArray[0].replace(",",".");
    const secondNumber = +enteredDataAsArray[1].replace(",",".");
    const mathOperation = enteredDataAsArray[2];
    let result :number =0;
    if (!isNaN(firstNumber) && !isNaN(secondNumber) && secondNumber !=0  && enteredDataAsArray.length==3 && (mathOperation == "+" ||
        mathOperation == "-" || mathOperation =="*" || mathOperation == "!" || mathOperation == "/" || mathOperation == "%")) {
        switch (mathOperation) {
            case "+" :result =firstNumber + secondNumber;break;
            case "-" :result =firstNumber - secondNumber;break;
            case "*" :result =firstNumber * secondNumber;break;
            case "!" :result =firstNumber+mathOperation+secondNumber;break;
            case "/" :result =firstNumber / secondNumber;break;
            case "%" :result =firstNumber % secondNumber;
        }
        console.clear();
        return console.log(`–†–µ–∑—É–ª—å—Ç–∞—Ç: ${result}`)
    }
    else {
        console.clear();
        console.log("–ù–µ–≤–µ—Ä–Ω—ã–π –≤–≤–æ–¥, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑")
        task4Func();
    }
}

task4Func();
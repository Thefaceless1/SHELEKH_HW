/*
#### Task 1 üíª
–ó–∞–π—Ç–∏ –Ω–∞ 5 —Ä–∞–∑–Ω—ã—Ö —Å—Å—ã–ª–æ–∫ –≤ https://the-internet.herokuapp.com/ (–º–æ–∂–Ω–æ —Å –ø–æ–º–æ—â—å—é –∫–ª–∏–∫–∞, –º–æ–∂–Ω–æ —á–µ—Ä–µ–∑ url).
    –° –∫–∞–∂–¥–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã –¥–ª—è 2-3 —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –≤—ã–≤–µ—Å—Ç–∏ –≤ –∫–æ–Ω—Å–æ–ª—å –æ–¥–Ω–æ –∏–∑: –∑–Ω–∞—á–µ–Ω–∏–µ –∞—Ç—Ä–∏–±—É—Ç–∞, value, —Ç–µ–∫—Å—Ç.*/

import {Browser, Builder, Button, By, Key, until, WebDriver} from "selenium-webdriver";
import chrome from "selenium-webdriver/chrome";
import {path} from "chromedriver";



async function getElements () {
    const service = new chrome.ServiceBuilder(path);
    const driver : WebDriver = await new Builder().forBrowser(Browser.CHROME).setChromeService(service).build();
    await driver.manage().window().maximize()

    //–Ω–∞—Ö–æ–¥–∏–º —Å—Ç—Ä–æ–∫—É —Å–æ —Å—Å—ã–ª–∫–æ–π –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É —Å —á–µ–∫–±–æ–∫—Å–∞–º–∏ –∏ –≤—ã–≤–æ–¥–∏–º –µ–µ —Ü–≤–µ—Ç
    await driver.get("https://the-internet.herokuapp.com/");
    const checkboxes = await driver.findElement(By.xpath("//a[@href='/checkboxes']"));
    console.log(await checkboxes.getText(),await checkboxes.getCssValue("color"));

    //–Ω–∞—Ö–æ–¥–∏–º –ø–µ—Ä–≤—ã–π —á–µ–∫–±–æ–∫—Å –∏ –ø—Ä–æ–≤–µ—Ä—è–µ–º –≤—ã–±—Ä–∞–Ω –æ–Ω –∏–ª–∏ –Ω–µ—Ç –∏ –≤—ã–≤–æ–¥–∏–º –µ–≥–æ —Ä–∞–∑–º–µ—Ä:
    await driver.actions().click(checkboxes).perform();
    const firstCheckbox = await driver.findElement(By.xpath("//*[@id='checkboxes']/input[1]"));
    console.log(await firstCheckbox.isSelected(),await firstCheckbox.getCssValue("font-size"));

    //–∫–ª–∏–∫–∞–µ–º –ø–æ —á–µ–∫–±–æ–∫—Å—É –∏ –ø—Ä–æ–≤–µ—Ä—è–µ–º –≤—ã–±—Ä–∞–Ω –æ–Ω –∏–ª–∏ –Ω–µ—Ç:
    await driver.actions().click(firstCheckbox).perform();
    console.log(await firstCheckbox.isSelected());

    //–Ω–∞—Ö–æ–¥–∏–º —ç–ª–µ–º–µ–Ω—Ç –≥–∏–ø–µ—Ä—Å—Å—ã–ª–∫—É –∏ –ø–æ–ª—É—á–∞–µ–º –µ–≥–æ url
    const seleniumLink = await driver.findElement(By.xpath("//*[@target='_blank' and text()='Elemental Selenium']"));
    console.log(await seleniumLink.getAttribute("href"));

    //–≤–æ–∑–≤—Ä–∞—â–∞–µ–º—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é –∏ –ø–µ—Ä–µ—Ö—Ä–¥–∏–º –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É –≤—ã–±–æ—Ä–∞ —Ñ—Ä–µ–π–º–∞
    await driver.navigate().back();
    const frame = await driver.findElement(By.xpath("//a[@href='/frames']"));
    await driver.actions().click(frame).perform();

    //–Ω–∞—Ö–æ–¥–∏–º –∫–Ω–æ–ø–∫—É iFrame, –Ω–∞–∂–∏–º–∞–µ–º –Ω–∞ –Ω–µ–µ ,–ø–æ–ª—É—á–∞–µ–º –∑–∞–≥–æ–ª–æ–≤–æ–∫ –≤ –æ—Ç–∫—Ä—ã–≤—à–µ–º—Å—è –æ–∫–Ω–µ –≤—ã–≤–æ–¥–∏–º –≤ –∫–æ–Ω—Å–æ–ª—å —Ü–≤–µ—Ç –∑–∞–≥–æ–ª–æ–≤–∫–∞
    const iFramesButton = await driver.findElement(By.xpath("//*[@href='/iframe']"));
    await driver.actions().click(iFramesButton).perform();
    const title = await driver.findElement(By.xpath("//h3"));
    console.log(await title.getText(),await title.getCssValue("color"));

    //–Ω–∞—Ö–æ–¥–∏–º —Ñ—Ä–µ–π–º, –ø–µ—Ä–µ–∫–ª—é—á–∞–µ–º—Å—è –Ω–∞ –Ω–µ–≥–æ, –æ—á–∏—â–∞–µ–º –≤–≤–µ–¥–µ–Ω–Ω—ã–π –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é —Ç–µ–∫—Å—Ç, –≤–≤–æ–¥–∏–º —Å–≤–æ–π —Ç–µ–∫—Å—Ç –∏ –≤—ã–¥–µ–ª—è–µ–º –µ–≥–æ
    await driver.wait(until.elementLocated(By.xpath("//*[@id='mce_0_ifr']")));
    const iFrame = await driver.findElement(By.xpath("//*[@id='mce_0_ifr']"));
    await driver.switchTo().frame(iFrame);
    await driver.wait(until.elementLocated(By.xpath("//*[@id='tinymce']//p")));
    const frameText = await driver.findElement(By.xpath("//*[@id='tinymce']//p"));
    console.log(await frameText.getText());
    await frameText.clear();
    const myText = "new text";
    await frameText.sendKeys(myText);
    for (const i of myText) {
        await driver.actions().keyDown(Key.SHIFT).sendKeys(Key.ARROW_LEFT).perform();
    }
    await driver.actions().keyUp(Key.SHIFT);

    //–≤–æ–∑–≤—Ä–∞—â–∞–µ–º—Å—è –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É, –Ω–∞—Ö–æ–¥–∏–º –∏ –Ω–∞–∂–∏–º–∞–µ–º –Ω–∞ –∫–Ω–æ–ø–∫—É –∂–∏—Ä–Ω–æ–≥–æ —Ç–µ–∫—Å—Ç–∞
    await driver.switchTo().defaultContent();
    const boldButton = await driver.findElement(By.xpath("//button[@title='Bold']//span[@class='tox-icon tox-tbtn__icon-wrap']"));
    await boldButton.click();

    //–≤–æ–∑–≤—Ä–∞—â–∞–µ–º—Å—è –≤–æ —Ñ—Ä–µ–π–º, –∫–æ–ø–∏—Ä—É–µ–º –∂–∏—Ä–Ω—ã–π —Ç–µ–∫—Å—Ç –∏ –≤—Å—Ç–∞–≤–ª—è–µ–º  10 —Ä–∞–∑
    await driver.switchTo().frame(iFrame);
    await driver.actions().keyDown(Key.CONTROL).sendKeys(Key.chord("c")).perform();
    for (let i=0;i<10;i++) {
        await driver.actions().keyDown(Key.CONTROL).sendKeys(Key.chord("v")).perform();
    }

    await driver.quit();
}

getElements();

